# -*- coding: utf-8 -*-
"""컴과수업 웹사이트.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WOC18GfFFJE-4Voje2eMOI7cszPG4yYz
"""

!pip install streamlit -q #필요 라이브러리 설치
!pip install pyngrok

!pip install ngrok

from pyngrok import ngrok

ngrok.set_auth_token('write your outotoken') #오토 토근 지정

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# 
# import streamlit as st
# import tensorflow as tf
# from PIL import Image, ImageOps
# import numpy as np
# from tensorflow.keras.applications.imagenet_utils import decode_predictions  #필요라이브러리 불러오기
# 
# region: kr
# 
# resnet50_pre = tf.keras.applications.resnet.ResNet50(weights='imagenet', input_shape=(224, 224, 3)) #만들어진 인공지능 가져오기 // image net 에서의 224 224 3 사이즈의 이미지로 학습된 AI ResNet50  을 가져옴
# 
# st.title('이미지 분류 인공지능 웹페이지')
# file = st.file_uploader('이미지를 올려주세요.', type=['jpg', 'png'])
# 
# if file is None:
#     st.text('이미지를 먼저 올려주세요.')
# else:
#     image = Image.open(file)  #파일을 이미지로 읽어 드림
#     st.image(image, use_column_width=True) #이미지를 st.image 함수로 노출시킴
# 
#     img_resized = ImageOps.fit(image, (224, 224), Image.ANTIALIAS) #AI 가 학습한 형태의 이미지로 봐꿈
#     img_resized = img_resized.convert("RGB") # RGB 는 보통 3개의 채널
#     img_resized = np.asarray(img_resized) #이미지를 asarray 해줌 이유는 이미지를 컴퓨터가 이해할 수 있는 숫자 배열 형태로 변환하기 위해서
# 
#     pred = resnet50_pre.predict(img_resized.reshape([1, 224, 224, 3])) #1이 붙는건 이미지가 1개다 라는 뜻 후 예측을 하면 예측 결과가 pred 에 저장
#     decoded_pred = decode_predictions(pred, top=3)[0] #decoded_predictions 으로 어떤 종류인지 매핑
# 
#     st.write('예측 결과:')
#     for i in range(len(decoded_pred)):
#         st.write(f"{decoded_pred[i][1]}: {decoded_pred[i][2]*100:.2f}%") #이미지가 몇위의 몇퍼센트 인지 보여줌
#

!ls #디랙토리가 어떤지 확인 활수 있음 app.py 가 생김

!cat app.py #app.py 의 코드를 볼수 있음

!nohup streamlit run app.py --server.port 80 & #nohup =끊기지 않게 하라 streamlit을 사용해 웹페이지 실행 코랩내부 에서 실행됨 외부 접속 불가능

ngrok.connect(port='80', region='ap') #접속할 url 을 만듦

# ngrok 실행
ngrok_conn = ngrok.connect(port='80')

# ngrok을 종료하기 전에 커넥션 유지
input("Press Enter to stop ngrok...")

# 커넥션 종료
ngrok_conn.close()

url

!pip install tree #502 에러 대처 법 pkill ngrok / ngrok start 입력
!apt-get install tree
!bash

